/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shamazon;

import java.util.*;
import javax.swing.BoxLayout;
import javax.swing.JPanel;
/**
 *
 * @author Charles
 */
public class ShoppingCartPanel extends javax.swing.JPanel
{
    /**
     * Reference to the transactionManager for sending the purchases of the user to.
     */
    private TransactionManager tranActMan;
    
    /**
     * Reference to the listings in the shopping cart to display
     */
    private List<Listing> toDisplay;
    
    /**
     * Reference to the user's shopping cart
     */
    private ShoppingCart shopCart;
    
    /**
     * Creates new form ShoppingCart
     * Don't use this one
     */
    public ShoppingCartPanel()
    {
        initComponents();
    }
    
     /**
     * Creates new constructor for ShoppingCart
     */
    public ShoppingCartPanel(ShoppingCart cart, TransactionManager tm)
    {
        tranActMan = tm;
        shopCart = cart;
        initComponents();
    }

    /**
     * Sets the ShoppingCart reference
     * @param cart 
     */
    public void SetCart(ShoppingCart cart)
    {
        shopCart = cart;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        ListingScrollPane = new javax.swing.JScrollPane();
        CheckoutButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        TotalPriceLabel = new javax.swing.JLabel();
        RefreshButton = new javax.swing.JButton();

        ListingScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        CheckoutButton.setText("Checkout");
        CheckoutButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                CheckoutButtonActionPerformed(evt);
            }
        });

        ClearButton.setText("Clear Cart");
        ClearButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ClearButtonActionPerformed(evt);
            }
        });

        TotalPriceLabel.setText("Total: $0.0");

        RefreshButton.setText("Refresh");
        RefreshButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                RefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ClearButton, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .addComponent(CheckoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TotalPriceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(RefreshButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ListingScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ListingScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CheckoutButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClearButton)
                        .addGap(28, 28, 28)
                        .addComponent(TotalPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 256, Short.MAX_VALUE)
                        .addComponent(RefreshButton)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ClearButtonActionPerformed
    {//GEN-HEADEREND:event_ClearButtonActionPerformed
        shopCart.ClearCart();
        this.RefreshListings();
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_RefreshButtonActionPerformed
    {//GEN-HEADEREND:event_RefreshButtonActionPerformed
        this.RefreshListings();
    }//GEN-LAST:event_RefreshButtonActionPerformed

    private void CheckoutButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CheckoutButtonActionPerformed
    {//GEN-HEADEREND:event_CheckoutButtonActionPerformed
        this.CheckOut();
    }//GEN-LAST:event_CheckoutButtonActionPerformed

    /**
     * Refresh the listings in the visual shopping cart panel
     */
    public void RefreshListings()
    {
        //Get the current shopping cart list
        toDisplay = shopCart.GetCart();
        
        //Create an accumulator varible to display on the sidebar
        float totalCalculate = 0f;
        
        if(!toDisplay.isEmpty())
        {
            //Clear the pane so to repopulate
            //ListingScrollPane.removeAll();
            JPanel panelContain = new JPanel();
            
            //Loop to repopulate the listings
            for(int i = 0; i < toDisplay.size(); i++)
            {
                //Create a panel to load
                ListingPreviewCartPanel listingPanelToAdd = new ListingPreviewCartPanel();

                //Set cart reference so the listing can remove itself via button
                listingPanelToAdd.SetCart(shopCart);
                listingPanelToAdd.SetShopPanel(this);
                
                //Loadlisting to panel
                listingPanelToAdd.LoadListingToPanel(toDisplay.get(i));
                
                //Add to container that will be added to pane
                panelContain.add(listingPanelToAdd);
                
                //Make sure the panel is visable
                listingPanelToAdd.setVisible(true);
                
                //Add the listing price to the accumulator
                totalCalculate += toDisplay.get(i).GetPrice();
            }
            //Format panel layout
            panelContain.setLayout(new BoxLayout(panelContain, BoxLayout.Y_AXIS));
            //Make sure container is visable
            panelContain.setVisible(true);
            //Add panels to scroll pane
            ListingScrollPane.getViewport().add(panelContain);
        }
        else
        {
            //Clear the pane so to repopulate
            //ListingScrollPane.removeAll();
            JPanel panelContain = new JPanel();
            
             //Format panel layout
            panelContain.setLayout(new BoxLayout(panelContain, BoxLayout.Y_AXIS));
            //Make sure container is visable
            panelContain.setVisible(true);
            //Add panels to scroll pane
            ListingScrollPane.getViewport().add(panelContain);
        }
        
        //Output the total to the total label
        TotalPriceLabel.setText("Total: $" + totalCalculate);
    }
    
    /**
     * Passes the list to the transaction manager to allow the user to 
     * finish buying the listings.
    */
    private void CheckOut()
    {
        this.tranActMan.CheckOut(toDisplay);
        shopCart.ClearCart();
        this.RefreshListings();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CheckoutButton;
    private javax.swing.JButton ClearButton;
    private javax.swing.JScrollPane ListingScrollPane;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JLabel TotalPriceLabel;
    // End of variables declaration//GEN-END:variables
}
